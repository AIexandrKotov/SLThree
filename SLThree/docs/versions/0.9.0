------ 0.9.0 Parameters Update ------ [~.~.~]
Language:
    - New generic methods
        - For now need to add the `template` modificator
          `template f<T>() => T;`
        - Constraints on parameters
          `<T1: value + i64 | u64, T2: => T2 >= 10>() => T1 + T2;`
        - Make generic
          `slt.make_template(f, -[2]);`
    - Blocks `{...}` is expressions now
    - Dictionary initializers new syntax:
      `new dict { 1: 2, 3: 4 }`
      `new dict<i64, i64> { 1: 2, 3: 4 }`
    - Syntax sugar for overloading methods
    - Defining methods with default parameters
      `(x = 5, y = 10) => x + y;`
    - `params` modificator:
      `params f(args) => args;`
      `args(1, 2, 3); //[1, 2, 3]`
    - Calling methods with a variable number of arguments
    - Syntax for creating methods from generics:
      `_is<T>(a) => a is T; isi64 = _is<i64>;`
Bugfixes:
    - Ignoring deffered code in static (#129)
    - Ignoring indexed properties in wrappers (#130)
    - Generic supporting for 0.8 initializers (#131)