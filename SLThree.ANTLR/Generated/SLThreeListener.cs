//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from SLThree.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="SLThreeParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface ISLThreeListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SLThreeParser.parse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParse([NotNull] SLThreeParser.ParseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SLThreeParser.parse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParse([NotNull] SLThreeParser.ParseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SLThreeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] SLThreeParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SLThreeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] SLThreeParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SLThreeParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm([NotNull] SLThreeParser.TermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SLThreeParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm([NotNull] SLThreeParser.TermContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SLThreeParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactor([NotNull] SLThreeParser.FactorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SLThreeParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactor([NotNull] SLThreeParser.FactorContext context);
}
